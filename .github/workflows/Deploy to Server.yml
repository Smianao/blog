name: Deploy to Server.yml

on:
  # 每当 push 到 main 分支时触发部署
  push:
    branches: [master]
  # 手动触发部署
  workflow_dispatch:

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          # “最近更新时间” 等 git 日志相关信息，需要拉取全部提交记录
          fetch-depth: 0

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          # 选择要使用的 node 版本
          node-version: 22 # VuePress 推荐 Node.js 16.x 或以上
          # 缓存 Node.js 依赖
          cache: npm

      - name: 安装依赖
        run: npm ci # 使用 npm 的安装方式，`ci` 确保依赖版本固定

      # 运行构建脚本
      - name: 构建 VuePress 站点
        run: npm run docs:build # 替换为你的构建命令

      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v3
      #   with: 
      #     path: src/.vuepress/dist
          
      - name: 清空服务器目录并上传新网页
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_KEY: ${{ secrets.SERVER_KEY }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          # 生成SSH私钥文件
          echo "${SERVER_KEY}" > server_key.pem
          chmod 600 server_key.pem
          # 动态获取并添加服务器的主机密钥到 known_hosts
          mkdir -p ~/.ssh
          ssh-keyscan ${SERVER_HOST} >> ~/.ssh/known_hosts
          # 清空远程文件夹
          ssh -i server_key.pem ${SERVER_USER}@${SERVER_HOST} "rm -rf ${DEPLOY_PATH}/*"
          # 上传新的文件
          scp -i server_key.pem -r ./src/.vuepress/dist/* ${SERVER_USER}@${SERVER_HOST}:${DEPLOY_PATH}
          # 删除SSH私钥文件
          rm -f server_key.pem

  scrape:
    needs: Deploy
    runs-on: ubuntu-latest
    name: 重新抓取 MeiliSearch 文档
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 运行抓取器
        env:
          # 替换为你自己的 MeiliSearch 主机 URL
          HOST_URL: https://meilisearch.smianao.com
          API_KEY: ${{ secrets.MEILISEARCH_MASTER_KEY }}
          # 替换为配置文件的路径
          CONFIG_FILE_PATH: ${{ github.workspace }}/.github/workflows/MeiliSearch/config.json
        run: |
          docker run -t --rm \
            -e MEILISEARCH_HOST_URL=$HOST_URL \
            -e MEILISEARCH_API_KEY=$API_KEY \
            -v $CONFIG_FILE_PATH:/docs-scraper/config.json \
            getmeili/docs-scraper:latest pipenv run ./docs_scraper config.json